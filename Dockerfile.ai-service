# AI Service Dockerfile
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install shared dependencies first
COPY shared/package*.json ./shared/
COPY package*.json ./
RUN npm ci

# Copy shared source and build it
COPY shared/ ./shared/
WORKDIR /app/shared
RUN npm run build

# Install ai-service dependencies
WORKDIR /app
COPY ai-service/package*.json ./ai-service/
RUN cd ai-service && npm ci

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/ ./
COPY ai-service/ ./ai-service/

# Build ai-service
WORKDIR /app/ai-service
RUN npm run build

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 aiservice

# Copy built application
COPY --from=builder --chown=aiservice:nodejs /app/ai-service/dist ./dist
COPY --from=builder --chown=aiservice:nodejs /app/ai-service/package*.json ./
COPY --from=builder --chown=aiservice:nodejs /app/shared/dist ./shared/dist
COPY --from=builder --chown=aiservice:nodejs /app/shared/package*.json ./shared/

# Install only production dependencies (use npm install instead of npm ci for production)
RUN npm install --omit=dev && npm cache clean --force

USER aiservice

EXPOSE 5000

CMD ["npm", "start"]