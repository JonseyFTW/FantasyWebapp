
services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: fantasy-postgres-dev
    environment:
      POSTGRES_DB: fantasy_football_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: fantasy-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development Mode)
  backend:
    image: node:18-alpine
    container_name: fantasy-backend-dev
    working_dir: /app
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fantasy_football_db
      JWT_SECRET: your-jwt-secret-change-in-production
      REDIS_URL: redis://redis:6379
      MCP_SERVER_URL: https://sleepermcp-production.up.railway.app
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/backend/node_modules
      - /app/frontend/node_modules
      - /app/ai-service/node_modules
      - /app/shared/node_modules
    command: sh -c "npm install && npm run build --workspace=shared && cd backend && cp -r ../database/prisma . && npx prisma generate && npm run dev"

  # AI Service (Development Mode)
  ai-service:
    image: node:18-alpine
    container_name: fantasy-ai-service-dev
    working_dir: /app
    environment:
      NODE_ENV: development
      # AI Providers (add your API keys)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      # MCP Integration
      MCP_SERVER_URL: https://sleepermcp-production.up.railway.app
      # Caching
      REDIS_URL: redis://redis:6379
      DEFAULT_AI_PROVIDER: claude
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/backend/node_modules
      - /app/frontend/node_modules
      - /app/ai-service/node_modules
      - /app/shared/node_modules
    command: sh -c "npm install && npm run build --workspace=shared && cd ai-service && npm run dev"

  # Frontend (Development Mode)
  frontend:
    image: node:18-alpine
    container_name: fantasy-frontend-dev
    working_dir: /app
    environment:
      NODE_ENV: development
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-change-in-production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fantasy_football_db
      NEXT_PUBLIC_BACKEND_URL: http://localhost:4000
      NEXT_PUBLIC_AI_SERVICE_URL: http://localhost:5000
      # OAuth (add your OAuth credentials)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - ai-service
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/backend/node_modules
      - /app/frontend/node_modules
      - /app/ai-service/node_modules
      - /app/shared/node_modules
    command: sh -c "npm install && npm run build --workspace=shared && cd frontend && npm run dev"

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  default:
    name: fantasy-network-dev